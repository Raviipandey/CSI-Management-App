name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - "v*"

jobs:
  apk:
    name: Generate APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: "8"
      
      - name: Set execution flag for gradlew
        run: chmod +x Android/gradlew

      - name: Decode Keystore
        run: echo "${{ secrets.KEYSTORE }}" | base64 -d > Android/app/my-release-key.keystore
      
      - name: Build Release APK
        run: |
          cd Android
          ./gradlew assembleRelease -Pandroid.injected.signing.store.file=my-release-key.keystore -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }} --stacktrace
      
      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: apk
          path: Android/app/build/outputs/apk/release/app-release.apk

  release:
    name: Release APK
    needs: apk
    runs-on: ubuntu-latest
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v2
        with:
          name: apk
      
      - name: Verify APK Presence
        run: |
          if [ -f app-release.apk ]; then
            echo "APK exists, proceeding with release."
          else
            echo "APK does not exist, halting workflow."
            exit 1
          fi
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: app-release.apk
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.event.repository.name }} v${{ github.ref_name }}