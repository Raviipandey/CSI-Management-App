on:
  push:
    branches: main
    tags:
      - 'v*'

 release_build:
     runs-on: ubuntu-latest
     if: startsWith(github.ref, 'refs/tags/')
 
     steps:
       - uses: actions/checkout@v2.6.0
 
       - name: Setup JAVA 11
         uses: actions/setup-java@v3
         with:
           distribution: 'corretto'
           java-version: 11
 
       - name: Cache Gradle and wrapper
         uses: actions/cache@v2
         with:
           path: |
             ~/.gradle/caches
             ~/.gradle/wrapper
           key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
      
      #1     
       - name: Decode Keystore
         env:
           ENCODED_STRING: ${{ secrets.SIGNING_KEY_STORE_BASE64 }}
           SIGNING_KEY_STORE_PATH: ${{ secrets.SIGNING_KEY_STORE_PATH }}
 
         run: |
           echo $ENCODED_STRING > keystore-b64.txt
           base64 -d keystore-b64.txt > $SIGNING_KEY_STORE_PATH
           
       #2
       - name: Build Release apk
         env:
           SIGNING_KEY_STORE_PATH: ${{ secrets.SIGNING_KEY_STORE_PATH }}
           SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
           SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
           SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
         run: ./gradlew assembleRelease
 
       - name: Build Release bundle
         env:
           SIGNING_KEY_STORE_PATH: ${{ secrets.SIGNING_KEY_STORE_PATH }}
           SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
           SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
           SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
         run: ./gradlew bundleRelease
       #3
       - name: Upload Release Build to Artifacts
         uses: actions/upload-artifact@v3
         with:
           name: release-artifacts
           paths: |
             app/build/outputs/apk/release/
             app/build/outputs/bundle/release/
       #4      
       - name: Create Github Release
         uses: softprops/action-gh-release@v1
         with:
           generate_release_notes: true
           prerelease: true
           files: |
             app/build/outputs/apk/release/app-release.apk
             app/build/outputs/bundle/release/app-release.aab

# name: Publish Release

# on:
#   push:
#     tags:
#       - 'v*'

# jobs:
#   release:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4
#     - name: Set up JDK 8
#       uses: actions/setup-java@v4
#       with:
#         java-version: '8'
#         distribution: 'adopt'
#     - name: Set up Node.js
#       uses: actions/setup-node@v4
#       with:
#         node-version: '20'
#     - name: Grant execute permission for gradlew
#       run: chmod +x Android/gradlew
#     - name: Build release APK
#       run: cd Android && ./gradlew assembleRelease
#     - name: Create GitHub Release
#       id: create_release
#       uses: actions/create-release@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         tag_name: ${{ github.ref_name }}
#         release_name: Release ${{ github.ref_name }}
#         draft: false
#         prerelease: false
#     - name: Upload APK to GitHub Release
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }}
#         asset_path: ./Android/app/build/outputs/apk/release/app-release.apk
#         asset_name: app-release.apk
#         asset_content_type: application/vnd.android.package-archive

